<?xml version="1.0" encoding="UTF-8"?>
<git-hooks>
    <pre-commit>
        <pre-commit-hook name="git-protected-branches" enabled="1" description="Stops accidental commits to protected branches" branches="dev|main|master" />
        <pre-commit-hook name="git-unstage-disallowed-files" enabled="1" description="Don't allow to push some files to the remote repository" exclusions=".config/githooks.xml$|node_modules/|vendor/|.env.*|composer.lock$" />
        <pre-commit-hook name="git-unstage-symlinked-files" enabled="1" description="Don't allow symlinked files to be pushed to the remote repository" />
        <pre-commit-hook name="git-has-conflicts" enabled="1" description="Prevent files with merge conflict to be commited" exclusions=".config/|.githooks/|.install/|vendor/" />
        <pre-commit-hook name="php-lint" enabled="1" description="Run php linter to check the syntax of the file" extensions=".(php)$" exclusions=".config/|.githooks/|.install/|vendor/" />
        <pre-commit-hook name="php-cs-fixer" enabled="1" description="Reformat the codebase based on rules (PSR2 + custom rules)" configuration=".config/.php-cs-fixer.php" extensions=".(php)$" exclusions=".config/|.githooks/|.install/|vendor/" />
        <pre-commit-hook name="php-cbf" enabled="1" description="PHP Code Beautifier, automatically fixed formatting code issues" configuration=".config/phpcs.xml" extensions=".(php)$" exclusions=".config/|.githooks/|.install/|vendor/" />
        <pre-commit-hook name="php-rector-safe" enabled="1" description="Run rector safe rules" configuration=".config/rector-safe.php" extensions=".(php)$" exclusions=".config/|.githooks/|.install/|vendor/" />
        <pre-commit-hook name="run-docker-compose-command" enabled="0" description="Run a command inside a Docker container" service="" command="" />
        <pre-commit-hook name="sh-shellcheck" enabled="1" description="Lint tool for .sh scripts, search for syntax errors" extensions=".(sh)$" exclusions=".config/|.githooks/|.install/|vendor/" />
        <pre-commit-hook name="js-eslint" enabled="1" description="Lint tool for .js scripts, search for syntax errors and try to fix them automatically" configuration=".config/.eslintrc.js" extensions=".(js)$" exclusions=".config/|.githooks/|.install/|node_modules/|vendor/" />
        <pre-commit-hook name="md-lint" enabled="1" description="Lint tool for .md files" configuration=".config/.markdownlint.json" extensions=".(md)$" exclusions=".config/|.githooks/|.install/|node_modules/|vendor/" />
    </pre-commit>
    <pre-commit-wiki>
        <pre-commit-wiki-hook name="git-unstage-disallowed-files" enabled="1" description="Don't allow to push some files to the repository." exclusions=".config/githooks.xml|.env|composer.lock" />
        <pre-commit-wiki-hook name="git-unstage-symlinked-files" enabled="1" description="Don't allow symlinked files to be pushed to the remote repository" />
        <pre-commit-wiki-hook name="generate-wiki-sidebar" enabled="1" description="Create/refresh the _sidebar.md file." />
        <pre-commit-wiki-hook name="md-lint" enabled="1" description="Lint tool for .md files" configuration=".config/.markdownlint.json" extensions=".(md)$" exclusions=".config/|.githooks/" />
    </pre-commit-wiki>
    <commit-msg>
        <commit-msg-hook name="check-prefix" enabled="1" description="Make sure the commit message starts with a specific prefix." prefixes="^((chore|docs|feat|fix|init|merge|refactor|style|test|wip):|wip)" />
        <commit-msg-hook name="wip-skip-ci" enabled="1" description="If the commit message start with 'WIP:', add [skip-ci] keyword in the message" prefixes="^wip:?" />
        <commit-msg-hook name="skip-ci-tests" enabled="0" description="Skip tests in the CI pipeline when the commit only concerns somes files extensions (like .bat, .txt, ...) and changes in theses files won't impact tests" extensions="bat|htm|html|json|log|md|ps1|txt|xml" />
    </commit-msg>
    <commit-msg-wiki></commit-msg-wiki>
</git-hooks>
