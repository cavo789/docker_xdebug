version: "3.9"

services:
  apache:
    volumes:
      - ./.docker/webserver/demo.apache.conf:/usr/local/apache2/conf/demo.apache.conf

  php:
    build:
      args:
        # During the development, install PHP tools (php-cs-fixer, phan, ...)
        - PHPTOOLS_INSTALL=true
        # Install or not xDebug during the build of the php service?
        - XDEBUG_INSTALL=${XDEBUG_INSTALL}
        - XDEBUG_MAJOR_VERSION=${XDEBUG_MAJOR_VERSION}
        - XDEBUG_FULL_VERSION=${XDEBUG_FULL_VERSION}
    volumes:
      # Allow to sync the /src folder of the development machine to the
version: "3.9"

services:
  apache:
    volumes:
        # Allow to sync files between host and Docker
        - ./.docker/webserver/demo.apache.conf:/usr/local/apache2/conf/demo.apache.conf
        - ./src:/var/www/html

  php:
    build:
      args:
        # During the development, install PHP tools (php-cs-fixer, phan, ...)
        - PHPTOOLS_INSTALL=${PHPTOOLS_INSTALL}
        # Install or not xDebug during the build of the php service?
        - XDEBUG_INSTALL=${XDEBUG_INSTALL}
        - XDEBUG_MAJOR_VERSION=${XDEBUG_MAJOR_VERSION}
        - XDEBUG_FULL_VERSION=${XDEBUG_FULL_VERSION}
    volumes:
      # Allow to sync the /src folder of the development machine to the
      # /var/www/html folder in the Docker container.
      - ./src:/var/www/html
      # Other synchronisations during development
      - ./.config:/var/www/.config
      - ./.devcontainer:/var/www/.devcontainer
      - ./.vscode:/var/www/.vscode
      # Synchronize the ini file for PHP with the configuration for xDebug
      # use the v2 or the v3 configuration file based on the xDebug version used.
      - ./.docker/php/conf.d/xdebug_v${XDEBUG_MAJOR_VERSION}.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      # During development, enable errors to be reported to the developer
      - ./.docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      # Persist VS Code extensions between rebuilds (this to avoid VSCode reinstall again and again
      # extension when developing inside the container)
      - vscode-extensions:/root/.vscode-server/extensions

volumes:
  vscode-extensions:
      - ./src:/var/www/html
      # Other synchronisations during development
      - ./.config:/var/www/.config
      - ./.devcontainer:/var/www/.devcontainer
      - ./.vscode:/var/www/.vscode
      # Synchronize the ini file for PHP with the configuration for xDebug
      # use the v2 or the v3 configuration file based on the xDebug version used.
      - ./.docker/php/conf.d/xdebug_v${XDEBUG_MAJOR_VERSION}.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      # During development, enable errors to be reported to the developer
      - ./.docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      # Persist VS Code extensions between rebuilds (this to avoid VSCode reinstall again and again
      # extension when developing inside the container)
      - vscode-extensions:/root/.vscode-server/extensions

volumes:
  vscode-extensions:
